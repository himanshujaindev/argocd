upstream folder has helm files from upstream

kind create cluster --name argocd --config kind.yml

cd self-manage/

k create ns argocd
kubens argocd

helm repo add dandydeveloper https://dandydeveloper.github.io/charts/
helm repo update
helm dependency build argo/charts/argo-cd
helm template argo/charts/argo-cd --name-template argo-cd --namespace argocd -f argo/charts/argo-cd/custom/local.yaml | kubectl apply -f -

k -n argocd port-forward service/argo-cd-argocd-server 8080:80
k -n argocd get secrets argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d

k apply -f argo-application.yaml

k apply -f src/app-config/helm/base/wxcc-platform.yaml

k create secret generic s3-backup-credentials --from-literal=AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY_ID> --from-literal=AWS_SECRET_ACCESS_KEY=<AWS_ACCESS_KEY_ID>

--

Backup
Argo Backup - https://argo-cd.readthedocs.io/en/latest/operator-manual/disaster_recovery/

kubens argocd
argocd admin cluster namespaces
argocd admin cluster stats

argocd version | grep server
argocd admin export > backup.yaml
argocd admin import - < backup.yaml

❯ argocd admin import - < backup.yaml
/ConfigMap argocd-cm created
argoproj.io/Application argocd updated
argoproj.io/Application test-eks-example-chart updated
argoproj.io/ApplicationSet test-eks updated
---

kind delete cluster --name argocd

Source: https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd